{
  "version": "3.1",
  "log": [
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "e332886b01dacf91f1629bb701b96bb5aafa3d068c1445c83f3d3b054185c9a9",
          "withoutMetadata": "916765986aadcc020f1a538c7b30cb68e1561fe1caf06df8b9ca5702e9b9df37",
          "linkedWithoutMetadata": "916765986aadcc020f1a538c7b30cb68e1561fe1caf06df8b9ca5702e9b9df37"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "9fa76172b911f6661b0ca025d2ae2a75f9ea6f9dddb9dd54bbcd862d88e5919d",
          "withoutMetadata": "b0d4128059261a39b692cb4dc22f8284f8a3196e4d066f26248b28df85939483",
          "linkedWithoutMetadata": "b0d4128059261a39b692cb4dc22f8284f8a3196e4d066f26248b28df85939483"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "d2cf70db1dede6eb0606341abbd9c6c8a690df0a701aab47c22c18e92e77c979",
          "withoutMetadata": "8aa52f4245ae9d49e0f40a8f8537e8c967e600201daf13b6e37c618673c22fe2",
          "linkedWithoutMetadata": "8aa52f4245ae9d49e0f40a8f8537e8c967e600201daf13b6e37c618673c22fe2"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "41cb95c930c1cec7cef361234fb50dfa1ba94b22eb8e50fab0bacd1bb5e42328",
          "withoutMetadata": "0e58f386f04d5bed99a3de704800d8e0403928dfa0eb23b0569f96e2db35312e",
          "linkedWithoutMetadata": "0e58f386f04d5bed99a3de704800d8e0403928dfa0eb23b0569f96e2db35312e"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "35c4ac09c25b196e212d595a0ef5cce2f80eeb7af406f539a3cf3fc85e0bfae1",
          "withoutMetadata": "fa26588e4934956da690d8fe4b663038979e39cede16a4a111332b1eaffa1a5e",
          "linkedWithoutMetadata": "fa26588e4934956da690d8fe4b663038979e39cede16a4a111332b1eaffa1a5e"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "d2cf70db1dede6eb0606341abbd9c6c8a690df0a701aab47c22c18e92e77c979",
          "withoutMetadata": "8aa52f4245ae9d49e0f40a8f8537e8c967e600201daf13b6e37c618673c22fe2",
          "linkedWithoutMetadata": "8aa52f4245ae9d49e0f40a8f8537e8c967e600201daf13b6e37c618673c22fe2"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "48b5c522f6573de2fdbc1f59ad564c03a245c0db593996a9064e619d0b44909d",
          "withoutMetadata": "b0d4128059261a39b692cb4dc22f8284f8a3196e4d066f26248b28df85939483",
          "linkedWithoutMetadata": "b0d4128059261a39b692cb4dc22f8284f8a3196e4d066f26248b28df85939483"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "a7a674ef5cfc946761a83d0903828b0b028afd1f300f2fc5b98c920324f64093",
          "withoutMetadata": "4b0262e4739e93105e2853756d8d4f78ec9d5d3c8e19dfd1afee3b61e456d1da",
          "linkedWithoutMetadata": "4b0262e4739e93105e2853756d8d4f78ec9d5d3c8e19dfd1afee3b61e456d1da"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "f7dbd2831a3e10089cd1ea41c0f0fa0c7368abce0b6f100e60e6f51b3cce7179",
          "withoutMetadata": "704d0984b5ea2fed6f59de3953265d1fe5671e2f9eba18fddf832fb0bb7a519b",
          "linkedWithoutMetadata": "704d0984b5ea2fed6f59de3953265d1fe5671e2f9eba18fddf832fb0bb7a519b"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "12845417604ede9699aaaa70b54e13bedb7f4e71183997a10af3264f4dc59b82",
          "withoutMetadata": "92227d4ca429c089b9fff1f7e99e7ce761da4719de1f138648ba307084bd312b",
          "linkedWithoutMetadata": "92227d4ca429c089b9fff1f7e99e7ce761da4719de1f138648ba307084bd312b"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "4c195a76b60f7589ef540880304f596cc01a24d850c2f0b89860430fd26fff27",
          "withoutMetadata": "a9d2e4ab42c9f8a7747937176ba3427482a3073fed2c61f502c58a1c552c89dc",
          "linkedWithoutMetadata": "a9d2e4ab42c9f8a7747937176ba3427482a3073fed2c61f502c58a1c552c89dc"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaTokenUpgrades": {
        "version": {
          "withMetadata": "46f2f254b6f044ae53686dd25efee6f83841f28a81645e2320acacc1e9855f24",
          "withoutMetadata": "49b52ab18a3e024208655eb5649aaca72266888aba6dffaf403cd93f111e60fe",
          "linkedWithoutMetadata": "49b52ab18a3e024208655eb5649aaca72266888aba6dffaf403cd93f111e60fe"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaTokenUpgrades",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/test-helpers/CoinmecaTokenUpgrades.sol:32"
            },
            {
              "contract": "CoinmecaTokenUpgrades",
              "label": "_setter",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/test-helpers/CoinmecaTokenUpgrades.sol:34"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "0ff611fe9b8b11b7cb3948147587bf29ce1f35218cdd6d55900b7835437d4a83",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "abf226a4158f641e013c46ee96252e3ca124236abe28194c0271714c2108ce56",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)466_storage)",
              "src": "contracts/locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)466_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)466_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "12845417604ede9699aaaa70b54e13bedb7f4e71183997a10af3264f4dc59b82",
          "withoutMetadata": "92227d4ca429c089b9fff1f7e99e7ce761da4719de1f138648ba307084bd312b",
          "linkedWithoutMetadata": "92227d4ca429c089b9fff1f7e99e7ce761da4719de1f138648ba307084bd312b"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "d8524d1f0b60fabefa64cd44711aebb15a64b98f36a993123e9d7ed7b7d1a329",
          "withoutMetadata": "3553b13cf56a37a3e565eb8250e1498103e52f63aaa25236492be7887709cda6",
          "linkedWithoutMetadata": "3553b13cf56a37a3e565eb8250e1498103e52f63aaa25236492be7887709cda6"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "7cb657c189c2c4428481e73d3e56ecdc6de88a31207346077086bd0af04028ff",
          "withoutMetadata": "fb7af4da497689bdc2af331579568fd86f2d018fdf5324090d4197e8300cca7e",
          "linkedWithoutMetadata": "fb7af4da497689bdc2af331579568fd86f2d018fdf5324090d4197e8300cca7e"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "7a59ed7c6a6f668c0b3370ca72ad111ef407e026b361d8aefd1738916d1610e4",
          "withoutMetadata": "d2c17a42e274e76c1683dc26f2c82c0f13dc31a9911f87e10b4e03583c202b8b",
          "linkedWithoutMetadata": "d2c17a42e274e76c1683dc26f2c82c0f13dc31a9911f87e10b4e03583c202b8b"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "db049f36413cdf1ebbcee101ddc97ea31e5bca277fc7be63e98505d556968acf",
          "withoutMetadata": "959f1fe5faaf25cc91bca32c60c6b07c98b0f27a1248f9e72b714b4f213e1ab1",
          "linkedWithoutMetadata": "959f1fe5faaf25cc91bca32c60c6b07c98b0f27a1248f9e72b714b4f213e1ab1"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "52ff811bdbeec8dcafbc11c1a4c03ed8ee552e79d39d79c8bebb3dfb963f665c",
          "withoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50",
          "linkedWithoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "b6372f23d49e0fcdd8461038ec9d001284507fa1a62d9fae6e11abfd34997a78",
          "withoutMetadata": "a63a6c0554f5dcbeb7ca845a9a047ffa05263cb02c5346a47db5ce594a73552d",
          "linkedWithoutMetadata": "a63a6c0554f5dcbeb7ca845a9a047ffa05263cb02c5346a47db5ce594a73552d"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "7339893c9919ab612157f5e122e34274feab60ce64682eea85fcad5730e7cfe7",
          "withoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50",
          "linkedWithoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "f9f01a3f21affd9240a0edf62c6cb8c6c64b4987abfa1afe8953d13042f99c73",
          "withoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50",
          "linkedWithoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:33"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "4f4e460c544c1226244bc1deaca72edbea1b5188514da988e8bf9988e77edc47",
          "withoutMetadata": "5e15a1d7a60480af6a6719bdf52c9fa287fe59cb2126e5cf8ab9f3e392baa097",
          "linkedWithoutMetadata": "5e15a1d7a60480af6a6719bdf52c9fa287fe59cb2126e5cf8ab9f3e392baa097"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "79de01ece4af818d6b8a25ff6930b35de79d78d43d580c1152c5dd8333da531a",
          "withoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50",
          "linkedWithoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "version": {
          "withMetadata": "7be59a513f220c4d30078857646ad721da36b8a49f01274108e9c4eff576bc79",
          "withoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e",
          "linkedWithoutMetadata": "e179cb265cba6d38bf10f6da908e9f567873a5a933239b27cb690fe8642d7a4e"
        },
        "inherit": [
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20PausableUpgradeable": {
        "inherit": [
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "version": {
          "withMetadata": "95b82c0a9fb427aa390c09a048718c2b898c97960fbf1e423440153ca6da1ec5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "version": {
          "withMetadata": "ad781e9d4aaee36db4170f7302ed0f3fff0bcde725a2483d01b1ac8296c92454",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "version": {
          "withMetadata": "17d898217ca766762ac410a48231e1b0f20473007354ba9f15b3f3262f2741f3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "CoinmecaToken": {
        "version": {
          "withMetadata": "7939090dc1be348f806207374d7afd4d7bfa49d7b299006ea8d9d34409a1f21b",
          "withoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50",
          "linkedWithoutMetadata": "7585ecf22a944d7709ade70b7d0ccb11bd85204f2144b7e705b05ff0bd075e50"
        },
        "inherit": [
          "ERC20PausableUpgradeable",
          "PausableUpgradeable",
          "ERC20Upgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "CoinmecaToken",
              "label": "_contractAddresses",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts/CoinmecaToken.sol:32"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ITokenLocker": {
        "inherit": [],
        "libraries": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "TokenLocker": {
        "version": {
          "withMetadata": "427bb5e99e35898252a6b62787124a20b97ca51c1f0511c7fd26eb734d9fe212",
          "withoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e",
          "linkedWithoutMetadata": "172d084cd1f622c4c4cdf732fa301298a89e43ddd2fa6ece5f4bfc8b04bbef6e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenLocker",
            "src": "contracts/Locker/TokenLocker.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "TokenLocker",
              "label": "lockStates",
              "type": "t_mapping(t_address,t_struct(LockState)2326_storage)",
              "src": "contracts/Locker/TokenLocker.sol:19"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(LockState)2326_storage)": {
              "label": "mapping(address => struct TokenLocker.LockState)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(LockState)2326_storage": {
              "label": "struct TokenLocker.LockState",
              "members": [
                {
                  "label": "account",
                  "type": "t_address"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256"
                },
                {
                  "label": "iterations",
                  "type": "t_uint256"
                },
                {
                  "label": "totalAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "eachLockPeriod",
                  "type": "t_uint256"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}